\BOOKMARK [1][-]{section.1}{Taint Tracking}{}
\BOOKMARK [1][-]{section.2}{Goal}{}
\BOOKMARK [1][-]{section.3}{Types}{}
\BOOKMARK [2][-]{subsection.3.1}{Linear Types or \(Semi-Linear Types\)}{section.3}
\BOOKMARK [2][-]{subsection.3.2}{Non Linear Types}{section.3}
\BOOKMARK [2][-]{subsection.3.3}{Typing Rules}{section.3}
\BOOKMARK [3][-]{subsubsection.3.3.1}{Default Types}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.2}{Variable Declaration \(Taint Introduction\)}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.3}{Binary Expression \(Taint Propagation\)}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.4}{Assignment Expression \(Taint Propagation\)}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.5}{Untainted Control \(Taint Policy\)}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.6}{Function Definition evaluation \(Taint Propagation\)}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.7}{Function Declaration evaluation \(Taint Propagation\)}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.8}{Evaluating Sanitizer \(Taint Policy\)}{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.9}{Function call evaluation with untainted types \(Taint Propagation\) }{subsection.3.3}
\BOOKMARK [3][-]{subsubsection.3.3.10}{Non Sanitizer evaluation with tainted types \(Taint Propagation\)}{subsection.3.3}
